// <auto-generated />
using System;
using Bochacha.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bochacha.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221227230826_Miggi")]
    partial class Miggi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bochacha.Domain.Building", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Bochacha.Domain.Equipment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RooId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Roomid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("serialID")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Roomid");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Bochacha.Domain.Request", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Bochacha.Domain.Room", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Buildingid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cur_ass_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("curator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("mod_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("number")
                        .HasColumnType("int");

                    b.Property<bool?>("sat_con")
                        .HasColumnType("bit");

                    b.Property<double?>("space")
                        .HasColumnType("float");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Buildingid");

                    b.HasIndex("UserId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Bochacha.Domain.USER", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bochacha.Domain.Equipment", b =>
                {
                    b.HasOne("Bochacha.Domain.Room", "Room")
                        .WithMany("Equipmenti")
                        .HasForeignKey("Roomid");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Bochacha.Domain.Request", b =>
                {
                    b.HasOne("Bochacha.Domain.USER", "USER")
                        .WithMany("Requests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("USER");
                });

            modelBuilder.Entity("Bochacha.Domain.Room", b =>
                {
                    b.HasOne("Bochacha.Domain.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("Buildingid");

                    b.HasOne("Bochacha.Domain.USER", "USER")
                        .WithMany("Rooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("USER");
                });

            modelBuilder.Entity("Bochacha.Domain.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Bochacha.Domain.Room", b =>
                {
                    b.Navigation("Equipmenti");
                });

            modelBuilder.Entity("Bochacha.Domain.USER", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
